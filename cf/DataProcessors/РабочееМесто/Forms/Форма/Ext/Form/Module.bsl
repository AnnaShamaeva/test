
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуПосетителей();
				
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТаймер();
	ПодключитьОбработчикОжидания("ОбновитьТаймер", 1, Ложь);

КонецПроцедуры
 
&НаКлиенте
Процедура ПосетителиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Регистратор) Тогда
		Возврат;	
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Регистратор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПосетителиПриАктивизацииСтроки(Элемент)
	
	ТекДанные	= Элементы.Посетители.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(ТекДанные.Таймер) Тогда
	//	
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПосетителя(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеДобавленияПосетителя", ЭтаФорма);
	
	ОткрытьФорму("Обработка.РабочееМесто.Форма.ФормаДобавленияПосетилеля",, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьНаПаузу(Команда)
	
	ТекДанные	= Элементы.Посетители.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПосещениеНаПаузе(ТекДанные.Регистратор, Истина);

	ЗаполнитьТаблицуПосетителей();
	ОбновитьТаймер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьПосещение(Команда)
	
	ТекДанные	= Элементы.Посетители.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПосещениеНаПаузе(ТекДанные.Регистратор, Ложь);
	
	ЗаполнитьТаблицуПосетителей();
	ОбновитьТаймер();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОповеститьОВремени(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПосещение(Команда)

	ТекДанные	= Элементы.Посетители.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьПосещение(ТекДанные.Регистратор);
	
	ЗаполнитьТаблицуПосетителей();
	ОбновитьТаймер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеДобавленияПосетителя(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьПосещение(Результат.Посетитель, Результат.ВидДлительности);
	
	ЗаполнитьТаблицуПосетителей();
	ОбновитьТаймер();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПосещение(Посетитель, ВидДлительности)
	
	ВремяНачала	= ТекущаяДата();
	
 	НовоеПосещение	= Документы.Посещение.СоздатьДокумент();
	НовоеПосещение.Дата					= ВремяНачала;
	НовоеПосещение.Посетитель			= Посетитель;
	НовоеПосещение.ВидДлительности		= ВидДлительности;
	НовоеПосещение.ДлительностьВМинутах	= ВидДлительности.ДлительностьВМинутах;
	НовоеПосещение.Начало				= ВремяНачала;
	НовоеПосещение.Записать(РежимЗаписиДокумента.Проведение);	
	
КонецПроцедуры

&НаСервере
Процедура ПосещениеНаПаузе(Посещение, УстановитьПаузу)
	
	ТекДата	= ТекущаяДата();
	
	ПосещениеОбъект	= Посещение.ПолучитьОбъект();
	ПосещениеОбъект.НаПаузе	= УстановитьПаузу;
	Если УстановитьПаузу Тогда
		НоваяСтрока	= ПосещениеОбъект.Паузы.Добавить();
		НоваяСтрока.Начало	= ТекДата;
	Иначе	
		КоличествоСтрок	= ПосещениеОбъект.Паузы.Количество();
		ПосещениеОбъект.Паузы[КоличествоСтрок-1].Окончание	= ТекДата;
	КонецЕсли;	
	ПосещениеОбъект.Записать(РежимЗаписиДокумента.Проведение);	
	
КонецПроцедуры

&НаСервере
Процедура ЗакрытьПосещение(Посещение)
	
	ВремяОкончания	= ТекущаяДата();
	
	ПосещениеОбъект	= Посещение.ПолучитьОбъект();
	ПосещениеОбъект.Окончание	= ВремяОкончания;
	ПосещениеОбъект.Записать(РежимЗаписиДокумента.Проведение);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПосетителей()
	
	ТаблицаПосетителей	= РеквизитФормыВЗначение("Посетители");
	
	Запрос	= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ПосещениеПаузы.Ссылка КАК Посещение,
	            	  |	СУММА(РАЗНОСТЬДАТ(ПосещениеПаузы.Начало, ПосещениеПаузы.Окончание, СЕКУНДА)) КАК Длительность
	            	  |ПОМЕСТИТЬ ВТ_СуммаПауз
	            	  |ИЗ
	            	  |	Документ.Посещение.Паузы КАК ПосещениеПаузы
	            	  |ГДЕ
	            	  |	ПосещениеПаузы.Ссылка.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	И ПосещениеПаузы.Окончание <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ПосещениеПаузы.Ссылка
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |ВЫБРАТЬ
	            	  |	ПосещениеПаузы.Ссылка КАК Посещение,
	            	  |	ПосещениеПаузы.Начало КАК Начало
	            	  |ПОМЕСТИТЬ ВТ_НачалоТекущейПаузы
	            	  |ИЗ
	            	  |	Документ.Посещение.Паузы КАК ПосещениеПаузы
	            	  |ГДЕ
	            	  |	ПосещениеПаузы.Ссылка.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	И ПосещениеПаузы.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |ВЫБРАТЬ
	            	  |	Посещения.Регистратор КАК Регистратор,
	            	  |	Посещения.Посетитель КАК Посетитель,
	            	  |	Посещения.Посетитель.Телефон КАК Телефон,
	            	  |	Посещения.Начало КАК Начало,
	            	  |	Посещения.Длительность КАК Длительность,
	            	  |	ВЫБОР
	            	  |		КОГДА Посещения.ВидДлительности.Бессрочно
	            	  |			ТОГДА НЕОПРЕДЕЛЕНО
	            	  |		ИНАЧЕ ДОБАВИТЬКДАТЕ(Посещения.Начало, МИНУТА, Посещения.Длительность)
	            	  |	КОНЕЦ КАК ПлановоеОкончание,
	            	  |	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Таймер,
	            	  |	Посещения.Регистратор.НаПаузе КАК НаПаузе,
	            	  |	ЕСТЬNULL(ВТ_СуммаПауз.Длительность, 0) КАК СуммаПауз,
	            	  |	ВТ_НачалоТекущейПаузы.Начало КАК НачалоТекущейПаузы
	            	  |ИЗ
	            	  |	РегистрНакопления.Посещения КАК Посещения
	            	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаПауз КАК ВТ_СуммаПауз
	            	  |		ПО Посещения.Регистратор = ВТ_СуммаПауз.Посещение
	            	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НачалоТекущейПаузы КАК ВТ_НачалоТекущейПаузы
	            	  |		ПО Посещения.Регистратор = ВТ_НачалоТекущейПаузы.Посещение
	            	  |ГДЕ
	            	  |	Посещения.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ТаблицаПосетителей	= Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(ТаблицаПосетителей, "Посетители");	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер()
	
	ТекДата	= ТекущаяДата();
	
	Для Каждого ТекСтрока Из Посетители Цикл
		
		Если ТекСтрока.Длительность > 0 Тогда // обратный отсчет	
			Осталось	= ТекСтрока.ПлановоеОкончание - ?(ТекСтрока.НаПаузе, ТекСтрока.НачалоТекущейПаузы, ТекДата) + ТекСтрока.СуммаПауз;
			ТекСтрока.Таймер	= ?(Осталось > 0, ПолучитьВремяИзСекунд(Осталось), Дата(1,1,1,0,0,0));		
		Иначе //бессрочно, прямой отсчет
			Прошло	= ?(ТекСтрока.НаПаузе, ТекСтрока.НачалоТекущейПаузы, ТекДата) - ТекСтрока.Начало - ТекСтрока.СуммаПауз;	
			ТекСтрока.Таймер	= ПолучитьВремяИзСекунд(Прошло);	
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВремяИзСекунд(КоличествоСекунд)
	
	Часы	= Цел(КоличествоСекунд/3600);
	Минуты	= Цел((КоличествоСекунд-Часы*3600)/60);
	Секунды	= КоличествоСекунд - Часы*3600 - Минуты*60; 
		
	Возврат Дата(1,1,1,Часы,Минуты,Секунды);
	
КонецФункции	





